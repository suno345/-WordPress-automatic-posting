# VPS cronパス問題緊急修正（v2.4.1 修正版）

# 方法1: 現在の予約状況詳細確認
echo "📋 現在の予約状況詳細確認..."
python execute_scheduled_posts.py --vps-mode --status

# 方法2: 予約投稿ファイルの直接確認
echo ""
echo "📁 予約投稿ファイル確認..."
python -c "
import json
from pathlib import Path
from datetime import datetime

# 予約投稿ファイルのパスを確認
schedule_file = Path('data/schedule/post_schedule.json')
if schedule_file.exists():
    with open(schedule_file, 'r', encoding='utf-8') as f:
        schedule_data = json.load(f)
    
    print('📅 予約投稿データ:')
    for date, posts in schedule_data.items():
        print(f'  日付: {date}')
        for post_id, post_data in posts.items():
            title = post_data.get('work_data', {}).get('title', '不明')
            scheduled_time = post_data.get('scheduled_time', '不明')
            status = post_data.get('status', '不明')
            print(f'    - {post_id}: {title}')
            print(f'      予定時刻: {scheduled_time}')
            print(f'      ステータス: {status}')
else:
    print('❌ 予約投稿ファイルが見つかりません')

# 完了投稿ファイルも確認
completed_file = Path('data/schedule/completed_posts.json')
if completed_file.exists():
    with open(completed_file, 'r', encoding='utf-8') as f:
        completed_data = json.load(f)
    
    print('')
    print('✅ 完了投稿データ:')
    for post_id, post_data in completed_data.items():
        title = post_data.get('work_data', {}).get('title', '不明')
        completed_time = post_data.get('completed_at', '不明')
        print(f'    - {post_id}: {title} (完了: {completed_time})')
else:
    print('📝 完了投稿ファイルなし')
"

# 方法3: cronログ確認
echo ""
echo "📄 cronログ確認（最新20行）..."
tail -20 logs/cron.log 2>/dev/null || echo "cronログファイルが見つかりません"

# 方法4: 今日の自動投稿ログ確認
echo ""
echo "📄 今日の自動投稿ログ確認..."
tail -30 logs/auto_post_$(date +%Y%m%d).log 2>/dev/null || echo "今日の自動投稿ログファイルが見つかりません"

# 方法5: cronジョブ設定確認
echo ""
echo "⏰ cronジョブ設定確認..."
crontab -l | grep wordpress-auto-posting || echo "cronジョブが設定されていません"

# 方法6: 手動で予約投稿実行テスト
echo ""
echo "🔧 手動予約投稿実行テスト..."
python execute_scheduled_posts.py --vps-mode --multiple 1

# 方法7: 予約投稿実行後の状況再確認
echo ""
echo "📋 実行後の予約状況確認..."
python execute_scheduled_posts.py --vps-mode --status

# 方法8: システム状況サマリー
echo ""
echo "💻 調査結果サマリー:"
echo "バージョン: v2.4.0（調査版）"
echo "目的: VPS予約投稿失敗の原因特定"
echo ""
echo "📋 調査項目:"
echo "1. 予約投稿データの存在確認"
echo "2. cronジョブの設定と実行状況"
echo "3. ログファイルのエラー確認"
echo "4. 手動実行での動作テスト"
echo ""
echo "🔍 予想される原因:"
echo "- cronジョブが動作していない"
echo "- 予約投稿データの形式問題"
echo "- 時刻判定のロジック問題"
echo "- 権限やパスの問題"